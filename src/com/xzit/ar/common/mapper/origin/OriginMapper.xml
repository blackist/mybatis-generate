<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzit.ar.common.mapper.origin.OriginMapper" >
  <resultMap id="BaseResultMap" type="com.xzit.ar.common.po.origin.Origin" >
    <id column="origin_id" property="originId" jdbcType="INTEGER" />
    <result column="origin_name" property="originName" jdbcType="VARCHAR" />
    <result column="origin_no" property="originNo" jdbcType="VARCHAR" />
    <result column="origin_type" property="originType" jdbcType="VARCHAR" />
    <result column="origin_grade" property="originGrade" jdbcType="CHAR" />
    <result column="members" property="members" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="state_time" property="stateTime" jdbcType="TIMESTAMP" />
    <result column="exp1" property="exp1" jdbcType="VARCHAR" />
    <result column="exp2" property="exp2" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xzit.ar.common.po.origin.Origin" extends="BaseResultMap" >
    <result column="origin_desc" property="originDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    origin_id, origin_name, origin_no, origin_type, origin_grade, members, create_time, 
    creator_id, state, state_time, exp1, exp2
  </sql>
  <sql id="Blob_Column_List" >
    origin_desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from origin
    where origin_id = #{originId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from origin
    where origin_id = #{originId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xzit.ar.common.po.origin.Origin" >
    insert into origin (origin_id, origin_name, origin_no, 
      origin_type, origin_grade, members, 
      create_time, creator_id, state, 
      state_time, exp1, exp2, 
      origin_desc)
    values (#{originId,jdbcType=INTEGER}, #{originName,jdbcType=VARCHAR}, #{originNo,jdbcType=VARCHAR}, 
      #{originType,jdbcType=VARCHAR}, #{originGrade,jdbcType=CHAR}, #{members,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=INTEGER}, #{state,jdbcType=CHAR}, 
      #{stateTime,jdbcType=TIMESTAMP}, #{exp1,jdbcType=VARCHAR}, #{exp2,jdbcType=VARCHAR}, 
      #{originDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xzit.ar.common.po.origin.Origin" >
    insert into origin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="originId != null" >
        origin_id,
      </if>
      <if test="originName != null" >
        origin_name,
      </if>
      <if test="originNo != null" >
        origin_no,
      </if>
      <if test="originType != null" >
        origin_type,
      </if>
      <if test="originGrade != null" >
        origin_grade,
      </if>
      <if test="members != null" >
        members,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="stateTime != null" >
        state_time,
      </if>
      <if test="exp1 != null" >
        exp1,
      </if>
      <if test="exp2 != null" >
        exp2,
      </if>
      <if test="originDesc != null" >
        origin_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="originId != null" >
        #{originId,jdbcType=INTEGER},
      </if>
      <if test="originName != null" >
        #{originName,jdbcType=VARCHAR},
      </if>
      <if test="originNo != null" >
        #{originNo,jdbcType=VARCHAR},
      </if>
      <if test="originType != null" >
        #{originType,jdbcType=VARCHAR},
      </if>
      <if test="originGrade != null" >
        #{originGrade,jdbcType=CHAR},
      </if>
      <if test="members != null" >
        #{members,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="stateTime != null" >
        #{stateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exp1 != null" >
        #{exp1,jdbcType=VARCHAR},
      </if>
      <if test="exp2 != null" >
        #{exp2,jdbcType=VARCHAR},
      </if>
      <if test="originDesc != null" >
        #{originDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzit.ar.common.po.origin.Origin" >
    update origin
    <set >
      <if test="originName != null" >
        origin_name = #{originName,jdbcType=VARCHAR},
      </if>
      <if test="originNo != null" >
        origin_no = #{originNo,jdbcType=VARCHAR},
      </if>
      <if test="originType != null" >
        origin_type = #{originType,jdbcType=VARCHAR},
      </if>
      <if test="originGrade != null" >
        origin_grade = #{originGrade,jdbcType=CHAR},
      </if>
      <if test="members != null" >
        members = #{members,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="stateTime != null" >
        state_time = #{stateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exp1 != null" >
        exp1 = #{exp1,jdbcType=VARCHAR},
      </if>
      <if test="exp2 != null" >
        exp2 = #{exp2,jdbcType=VARCHAR},
      </if>
      <if test="originDesc != null" >
        origin_desc = #{originDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where origin_id = #{originId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xzit.ar.common.po.origin.Origin" >
    update origin
    set origin_name = #{originName,jdbcType=VARCHAR},
      origin_no = #{originNo,jdbcType=VARCHAR},
      origin_type = #{originType,jdbcType=VARCHAR},
      origin_grade = #{originGrade,jdbcType=CHAR},
      members = #{members,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      state = #{state,jdbcType=CHAR},
      state_time = #{stateTime,jdbcType=TIMESTAMP},
      exp1 = #{exp1,jdbcType=VARCHAR},
      exp2 = #{exp2,jdbcType=VARCHAR},
      origin_desc = #{originDesc,jdbcType=LONGVARCHAR}
    where origin_id = #{originId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzit.ar.common.po.origin.Origin" >
    update origin
    set origin_name = #{originName,jdbcType=VARCHAR},
      origin_no = #{originNo,jdbcType=VARCHAR},
      origin_type = #{originType,jdbcType=VARCHAR},
      origin_grade = #{originGrade,jdbcType=CHAR},
      members = #{members,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=INTEGER},
      state = #{state,jdbcType=CHAR},
      state_time = #{stateTime,jdbcType=TIMESTAMP},
      exp1 = #{exp1,jdbcType=VARCHAR},
      exp2 = #{exp2,jdbcType=VARCHAR}
    where origin_id = #{originId,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzit.ar.common.mapper.GradeMapper" >
  <resultMap id="BaseResultMap" type="com.xzit.ar.common.po.Grade" >
    <id column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="grade_value" property="gradeValue" jdbcType="CHAR" />
    <result column="class_num" property="classNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="state_time" property="stateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    grade_id, grade_value, class_num, create_time, state, state_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from grade
    where grade_id = #{gradeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from grade
    where grade_id = #{gradeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xzit.ar.common.po.Grade" >
    insert into grade (grade_id, grade_value, class_num, 
      create_time, state, state_time
      )
    values (#{gradeId,jdbcType=INTEGER}, #{gradeValue,jdbcType=CHAR}, #{classNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=CHAR}, #{stateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xzit.ar.common.po.Grade" >
    insert into grade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="gradeValue != null" >
        grade_value,
      </if>
      <if test="classNum != null" >
        class_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="stateTime != null" >
        state_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="gradeValue != null" >
        #{gradeValue,jdbcType=CHAR},
      </if>
      <if test="classNum != null" >
        #{classNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="stateTime != null" >
        #{stateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzit.ar.common.po.Grade" >
    update grade
    <set >
      <if test="gradeValue != null" >
        grade_value = #{gradeValue,jdbcType=CHAR},
      </if>
      <if test="classNum != null" >
        class_num = #{classNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="stateTime != null" >
        state_time = #{stateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where grade_id = #{gradeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzit.ar.common.po.Grade" >
    update grade
    set grade_value = #{gradeValue,jdbcType=CHAR},
      class_num = #{classNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=CHAR},
      state_time = #{stateTime,jdbcType=TIMESTAMP}
    where grade_id = #{gradeId,jdbcType=INTEGER}
  </update>
</mapper>